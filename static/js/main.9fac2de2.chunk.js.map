{"version":3,"sources":["components/HowToPlay/example_grid.png","components/Home/Home.js","components/TopBar/TopBar.js","components/Board/Board.js","allPuzzles.js","components/Page/Page.js","components/HowToPlay/HowToPlay.js","components/PuzzleList/PuzzleList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","React","createElement","Fragment","href","TopBar","className","FontAwesomeIcon","icon","_faBarsStaggered","_faCircleQuestion","style","color","_faHouse","_faFilm","Board","props","_useState","useState","_useState2","_slicedToArray","swaps","setSwaps","answers","colors","Object","keys","answerStatus","_i","_colors","length","grid","_useState3","_useState4","origin","setOrigin","styles","Array","fill","map","highlights","r","c","selectOrigin","e","preventDefault","JSON","parse","target","id","selectDestination","destination","orig","dest","_ref","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","err","f","_step2","_iterator2","count","includes","check","swap","line","key","_","concat","onPointerDown","onPointerUp","transform","boxShadow","values","filter","ele","bool","i","allPuzzles","1","red","blue","pink","green","purple","2","3","4","5","makeGrid","titles","shuffle","res","puzzle","_i2","_Object$keys","Page","puzzleId","useParams","Set","_Object$values","group","add","testGrid","from","parseGrid","parseInt","HowToPlay","src","example","width","alt","PuzzleList","App","Routes","Route","path","element","exact","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","BrowserRouter"],"mappings":"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","file":"static/js/main.9fac2de2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/example_grid.892c824c.png\";","import React from \"react\";\r\n\r\nfunction Home(){\r\n    return(\r\n        <>\r\n            <h1>Welcome to GAME GRID!</h1>\r\n            <p>\r\n                Made by <a href='https://cb299792458.github.io/personal-site/'>me</a>, as a fan-made, video game version of Cine2Nerdle. \r\n                <br/>(Check out Cine2Nerdle, for movies, in the top right!)\r\n                <br/>Email puzzle suggestions and job offers to <a href=\"mailto: brianrlam@gmail.com\">brianrlam@gmail.com</a>\r\n            </p>\r\n            <a href=\"/puzzles/1\">Try a Puzzle!</a>\r\n        </>\r\n    ) \r\n}\r\n\r\nexport default Home","import './TopBar.css';\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { icon } from '@fortawesome/fontawesome-svg-core/import.macro'\r\n\r\nfunction TopBar(){\r\n\r\n    return(\r\n        <div className=\"bar\">\r\n            <a href='/all-puzzles'>\r\n                <FontAwesomeIcon className={'icon'} icon={icon({name: 'bars-staggered'})} />\r\n            </a>\r\n            <a href='/how-to-play'>\r\n                <FontAwesomeIcon className={'icon'} icon={icon({name: 'circle-question', style: 'regular'})} />\r\n            </a>\r\n\r\n            <a href='/'>\r\n                <div className='title'>\r\n                    <h1 style={{color: '#6f7172'}}>GAME</h1>\r\n                    <h1 style={{color: '#6ebf8b'}}>GRID</h1>\r\n                </div>\r\n            </a>\r\n\r\n            <a href='/'>\r\n                <FontAwesomeIcon className={'icon'} icon={icon({name: 'house'})} />\r\n            </a>\r\n            <a href='https://www.cinenerdle2.app/'>\r\n                <FontAwesomeIcon className={'icon'} icon={icon({name: 'film'})} />\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBar;","import './Board.css';\nimport React from 'react';\nimport {useState} from 'react';\n\nfunction Board(props){\n    // console.log('Rendering')\n    const [swaps, setSwaps] = useState(0)\n\n    const answers = props.answers;\n    const colors = Object.keys(answers);\n    const answerStatus = {};\n    for(let color of colors) answerStatus[color]=useState(false);\n    const grid=props.grid;\n    \n    const [origin,setOrigin] = useState(null)\n    \n    const styles = new Array(4).fill().map(()=>new Array(4).fill(null));\n    const highlights = new Array(4).fill().map(()=>new Array(4).fill(false));\n    for(let r=0;r<4;r++){\n        for(let c=0;c<4;c++){\n            styles[r][c] = useState('')\n            highlights[r][c]=useState(false)\n        }\n    }\n    \n    function selectOrigin(e){\n        e.preventDefault();\n        setOrigin(JSON.parse('['+e.target.id+']'));\n    }\n    \n    function selectDestination(e){\n        e.preventDefault();\n        const destination = JSON.parse('['+e.target.id+']')\n        swap(origin,destination);\n    }\n    \n    function swap(orig,dest){\n        if(!orig || (orig[0]===dest[0] && orig[1]===dest[1])){\n            // do nothing\n        } else {\n            [grid[orig[0]][orig[1]],grid[dest[0]][dest[1]]] = [grid[dest[0]][dest[1]],grid[orig[0]][orig[1]]];\n            \n            check(grid);\n            setSwaps(swaps+1)\n        }\n        // console.log(origin)\n        setOrigin(null);\n    }\n    \n    function check(grid){        \n        // reset colors\n        for(let r=0;r<4;r++){\n            for(let c=0;c<4;c++){\n                styles[r][c][1]('')\n                highlights[r][c][1](false)\n            }\n        }\n        for(let color of colors) answerStatus[color][1](false);\n        \n        for(let color of colors){\n            // horizontal\n            for(let r=0;r<4;r++){\n                let count=0;\n                for(let c=0;c<4;c++){\n                    if(!(color in answers)) continue;\n                    if(answers[color].includes(grid[r][c])) count++;\n                }\n                if(count===4){\n                    for(let c=0;c<4;c++) styles[r][c][1](color);\n                    answerStatus[color][1](true);\n                }\n                if(count===3){\n                    for(let c=0;c<4;c++){\n                        if(answers[color].includes(grid[r][c])) highlights[r][c][1](true)\n                    }\n                }\n            }\n            \n            // vertical\n            for(let c=0;c<4;c++){\n                let count=0;\n                for(let r=0;r<4;r++){\n                    if(!(color in answers)) continue;\n                    if(answers[color].includes(grid[r][c])) count++;\n                }\n                if(count===4){\n                    for(let r=0;r<4;r++){ \n                        styles[r][c][1](color);\n                        answerStatus[color][1](true);\n                    }\n                }\n                if(count===3){\n                    for(let r=0;r<4;r++){\n                        if(answers[color].includes(grid[r][c])) highlights[r][c][1](true)\n                    }\n                }\n            }\n        }\n\n        // return {almost: almost, finished: finished}\n    }\n    \n    // // dragging\n    // const [position, setPosition] = useState({ x: 0, y: 0 })\n    // const handleDrag = (e) => {\n    //     e.preventDefault();\n    //     // console.log(e)\n    //     let data = {x: e.clientX,y: e.clientY}\n    //     setPosition({ x: data.x, y: data.y }) \n    //     console.log(data.x,data.y)   \n    // };\n\n\n    return(\n        <>\n            <div id='board' >\n                {grid.map( (line,r) => {\n                    return <div id='row' key={r} >\n                        {line.map( (_,c) => {\n                            return <div className={`tile ${styles[r][c][0]} ${highlights[r][c][0] ? 'highlight' : ''}`} key={c} id={[r,c]}\n                            onPointerDown={selectOrigin}\n                            onPointerUp={selectDestination}\n                            // draggable=\"true\" \n                            // onDrag={handleDrag}\n                            // onDragStart={selectOrigin}\n                            style={ origin && origin[0]===r && origin[1]===c ? {transform: `scale(1.2)`, boxShadow: 'black 0px 5px 10px'} : {}}>\n                                {grid[r][c]}\n                            </div>\n                        })}\n                    </div>\n                })}\n            </div>\n            <div id='progress'>\n                <div id='groups-and-swaps'>\n                    <span>Game Groups: {Object.values(answerStatus).filter((ele)=>ele[0]===true).length}/{colors.length}</span>\n                    <span>Swaps: {swaps}</span>\n                </div>\n                <ol>\n                    {Object.values(answerStatus).map(function(bool,i){\n                        if(!bool[0]) return <li key={i}>?????</li>\n                        else return <li className={colors[i]} key={i}>{Object.values(answers)[i][0]}</li>\n                    })}\n                </ol>\n            </div>\n        </>\n    )\n};\n\n\nexport default Board;","const allPuzzles = {\n    1: {\n        red: ['Mario Series', 'Super Mario Galaxy', 'Super Mario Odyssey', 'Super Mario World', 'Super Mario 64'],\n        blue: ['Zelda Series', 'The Legend of Zelda: Breath of the Wild', 'The Legend of Zelda: Tears of the Kingdom', 'The Legend of Zelda: A Link to the Past', 'The Legend of Zelda: A Link Between Worlds'],\n        pink: ['Arcade Games', 'Asteroids', 'Ms. Pac-Man', 'Street Fighter II: The World Warrior', 'Frogger'],\n        green: ['Blizzard Games', 'Diablo', 'Starcraft', 'Overwatch', 'World of Warcraft'],\n        purple: ['\"World\" Titles', 'World of Warcraft', 'Super Mario World', 'Street Fighter II: The World Warrior', 'The Legend of Zelda: A Link Between Worlds'],\n    },\n    2: {\n        red: ['Mario Series', 'Super Mario Galaxy', 'Super Mario Odyssey', 'Super Mario World', 'Super Mario 64'],\n        blue: ['Zelda Series', 'The Legend of Zelda: Breath of the Wild', 'The Legend of Zelda: Tears of the Kingdom', 'The Legend of Zelda: A Link to the Past', 'The Legend of Zelda: A Link Between Worlds'],\n        pink: ['Arcade Games', 'Asteroids', 'Ms. Pac-Man', 'Street Fighter II: The World Warrior', 'Frogger'],\n        green: ['Blizzard Games', 'Diablo', 'Starcraft', 'Overwatch', 'World of Warcraft'],\n        purple: ['\"World\" Titles', 'World of Warcraft', 'Super Mario World', 'Street Fighter II: The World Warrior', 'The Legend of Zelda: A Link Between Worlds'],\n    },\n    3: {\n        red: ['Mario Series', 'Super Mario Galaxy', 'Super Mario Odyssey', 'Super Mario World', 'Super Mario 64'],\n        blue: ['Zelda Series', 'The Legend of Zelda: Breath of the Wild', 'The Legend of Zelda: Tears of the Kingdom', 'The Legend of Zelda: A Link to the Past', 'The Legend of Zelda: A Link Between Worlds'],\n        pink: ['Arcade Games', 'Asteroids', 'Ms. Pac-Man', 'Street Fighter II: The World Warrior', 'Frogger'],\n        green: ['Blizzard Games', 'Diablo', 'Starcraft', 'Overwatch', 'World of Warcraft'],\n        purple: ['\"World\" Titles', 'World of Warcraft', 'Super Mario World', 'Street Fighter II: The World Warrior', 'The Legend of Zelda: A Link Between Worlds'],\n    },\n    4: {\n        red: ['Mario Series', 'Super Mario Galaxy', 'Super Mario Odyssey', 'Super Mario World', 'Super Mario 64'],\n        blue: ['Zelda Series', 'The Legend of Zelda: Breath of the Wild', 'The Legend of Zelda: Tears of the Kingdom', 'The Legend of Zelda: A Link to the Past', 'The Legend of Zelda: A Link Between Worlds'],\n        pink: ['Arcade Games', 'Asteroids', 'Ms. Pac-Man', 'Street Fighter II: The World Warrior', 'Frogger'],\n        green: ['Blizzard Games', 'Diablo', 'Starcraft', 'Overwatch', 'World of Warcraft'],\n        purple: ['\"World\" Titles', 'World of Warcraft', 'Super Mario World', 'Street Fighter II: The World Warrior', 'The Legend of Zelda: A Link Between Worlds'],\n    },\n    5: {\n        red: ['Mario Series', 'Super Mario Galaxy', 'Super Mario Odyssey', 'Super Mario World', 'Super Mario 64'],\n        blue: ['Zelda Series', 'The Legend of Zelda: Breath of the Wild', 'The Legend of Zelda: Tears of the Kingdom', 'The Legend of Zelda: A Link to the Past', 'The Legend of Zelda: A Link Between Worlds'],\n        pink: ['Arcade Games', 'Asteroids', 'Ms. Pac-Man', 'Street Fighter II: The World Warrior', 'Frogger'],\n        green: ['Blizzard Games', 'Diablo', 'Starcraft', 'Overwatch', 'World of Warcraft'],\n        purple: ['\"World\" Titles', 'World of Warcraft', 'Super Mario World', 'Street Fighter II: The World Warrior', 'The Legend of Zelda: A Link Between Worlds'],\n    },\n}\n\nexport default allPuzzles;","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Board from \"../Board/Board\";\r\nimport _ from 'lodash';\r\nimport allPuzzles from \"../../allPuzzles\";\r\n\r\n\r\nfunction parseGrid(puzzle){\r\n    let titles = new Set();\r\n    for(let group of Object.values(puzzle)){\r\n        for(let i=1;i<group.length;i++){\r\n            titles.add(group[i])\r\n        }\r\n    }\r\n    titles = Array.from(titles)\r\n    let testGrid = makeGrid(titles);\r\n    while(!check(testGrid,puzzle)) testGrid = makeGrid(titles);\r\n    return testGrid;\r\n}\r\n\r\nfunction makeGrid(titles){\r\n    titles = _.shuffle(titles);\r\n\r\n    const res = new Array(4).fill().map(()=>new Array(4));\r\n    for(let r=0;r<4;r++){\r\n        for(let c=0;c<4;c++){\r\n            res[r][c] = titles[r*4 + c]\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nfunction check(grid,puzzle){\r\n    for(let color of Object.keys(puzzle)){\r\n        // horizontal\r\n        for(let r=0;r<4;r++){\r\n            let count=0;\r\n            for(let c=0;c<4;c++){\r\n                if(puzzle[color].includes(grid[r][c])) count++;\r\n            }\r\n            if(count>2) return false;\r\n        }\r\n        \r\n        // vertical\r\n        for(let c=0;c<4;c++){\r\n            let count=0;\r\n            for(let r=0;r<4;r++){\r\n                if(puzzle[color].includes(grid[r][c])) count++;\r\n            }\r\n            if(count>2) return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction Page(){\r\n    const {puzzleId} = useParams();\r\n    const grid = puzzleId in allPuzzles ? parseGrid(allPuzzles[puzzleId]) : null;\r\n\r\n    return(\r\n        <>\r\n            <p>This is Puzzle Page #{puzzleId}</p>\r\n            <a href={`/puzzles/${parseInt(puzzleId)+1}`}><p>Next Puzzle</p></a>\r\n            {puzzleId in allPuzzles ? <Board grid={grid} answers={allPuzzles[puzzleId]}/> : `Sorry, that puzzle doesn't exist yet!`}\r\n        </>\r\n    ) \r\n}\r\n\r\nexport default Page","import React from \"react\";\nimport example from './example_grid.png'\n\nfunction HowToPlay(){\n    return(\n        <>\n            <h1>HOW TO PLAY</h1>\n            <p>\n                Each puzzle has 16 video games. \n                There are five (or more) hidden themes linking the games in groups of four. \n                Drag and drop to swap two games, putting four linked games into a single row or column. \n                Be aware, some games will be used more than once. \n            </p>\n            <img src={example} width='400px' alt='example' />\n            <p>\n                If three out of four grouped games are in a single row or column, their outline will glow yellow.\n                If all four are grouped, they'll change color.\n                Find all the groups in as few swaps as possible!\n            </p>\n        </>\n    )\n}\n\nexport default HowToPlay;","import React from \"react\";\nimport allPuzzles from \"../../allPuzzles\";\n\n\nfunction PuzzleList(){\n    return(\n        <>\n            <h1>ALL PUZZLES</h1>\n            <ul>\n                {Object.keys(allPuzzles).map( i => {\n                    return(\n                        <a href={`/puzzles/${i}`} key={i}><li>\n                            {`Puzzle #${i}`}\n                        </li></a>   \n                    )\n                })}\n            </ul>\n        </>\n    )\n}\n\nexport default PuzzleList;","import './App.css';\nimport React from 'react';\nimport {Route, Routes} from 'react-router-dom'\nimport Home from './components/Home/Home';\nimport TopBar from './components/TopBar/TopBar';\nimport Page from './components/Page/Page';\nimport HowToPlay from './components/HowToPlay/HowToPlay';\nimport PuzzleList from './components/PuzzleList/PuzzleList';\n\nfunction App() {\n  return (\n    <div className='wrapper'>\n      <div className='side-panel'/>\n\n      <div className=\"App\">\n        <TopBar />\n        <Routes>\n          <Route path='/puzzles/:puzzleId' element={<Page/>} />\n          <Route path='/how-to-play' element={<HowToPlay/>} />\n          <Route path='/all-puzzles' element={<PuzzleList/>} />\n          <Route exact path='/' element={<Home/>} />\n        </Routes>\n      </div>\n\n      <div className='side-panel'/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom/dist';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}