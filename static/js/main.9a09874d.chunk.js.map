{"version":3,"sources":["components/Home/Home.js","components/TopBar/TopBar.js","components/Board/Board.js","allPuzzles.js","components/Page/Page.js","App.js","reportWebVitals.js","index.js"],"names":["Home","React","createElement","Fragment","href","TopBar","className","FontAwesomeIcon","icon","_faBarsStaggered","_faCircleQuestion","style","color","_faHouse","_faChartSimple","Board","props","_useState","useState","_useState2","_slicedToArray","swaps","setSwaps","answers","colors","Object","keys","answerStatus","_i","_colors","length","grid","origin","styles","Array","fill","map","highlights","r","c","selectOrigin","e","preventDefault","JSON","parse","target","id","selectDestination","destination","orig","dest","_ref","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","err","f","_step2","_iterator2","count","includes","check","swap","line","key","_","concat","onPointerDown","onPointerUp","onTouchMove","values","filter","ele","bool","i","console","log","allPuzzles","1","red","blue","pink","green","purple","2","3","4","5","makeGrid","titles","shuffle","res","puzzle","_i2","_Object$keys","Page","puzzleId","useParams","Set","_Object$values","group","add","testGrid","from","parseGrid","App","Routes","Route","path","element","exact","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","BrowserRouter"],"mappings":"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","file":"static/js/main.9a09874d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Home(){\r\n    return(\r\n        <>\r\n            <p>This is the Home Page</p>\r\n            <a href=\"/puzzles/1\">Try a Puzzle!</a>\r\n        </>\r\n    ) \r\n}\r\n\r\nexport default Home","import './TopBar.css';\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { icon } from '@fortawesome/fontawesome-svg-core/import.macro'\r\n\r\nfunction TopBar(){\r\n\r\n    return(\r\n        <div className=\"bar\">\r\n            <FontAwesomeIcon className={'icon'} icon={icon({name: 'bars-staggered'})} />\r\n            <FontAwesomeIcon className={'icon'} icon={icon({name: 'circle-question', style: 'regular'})} />\r\n\r\n            <div className='title'>\r\n                <p style={{color: '#6f7172'}}>GAME</p>\r\n                <p style={{color: '#6ebf8b'}}>GRID</p>\r\n            </div>\r\n\r\n            <a href='/'>\r\n                <FontAwesomeIcon className={'icon'} icon={icon({name: 'house'})} />\r\n            </a>\r\n            <FontAwesomeIcon className={'icon'} icon={icon({name: 'chart-simple'})} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBar;","import './Board.css';\nimport React from 'react';\nimport {useState} from 'react';\n\nfunction Board(props){\n    // console.log('Rendering')\n    const [swaps, setSwaps] = useState(0)\n\n    const answers = props.answers;\n    const colors = Object.keys(answers);\n    const answerStatus = {};\n    for(let color of colors) answerStatus[color]=useState(false);\n    const grid=props.grid;\n    \n    let origin = null;\n    \n    const styles = new Array(4).fill().map(()=>new Array(4).fill(null));\n    const highlights = new Array(4).fill().map(()=>new Array(4).fill(false));\n    for(let r=0;r<4;r++){\n        for(let c=0;c<4;c++){\n            styles[r][c] = useState('')\n            highlights[r][c]=useState(false)\n        }\n    }\n    \n    function selectOrigin(e){\n        e.preventDefault();\n        origin = JSON.parse('['+e.target.id+']')\n    }\n    \n    function selectDestination(e){\n        e.preventDefault();\n        const destination = JSON.parse('['+e.target.id+']')\n        swap(origin,destination);\n    }\n    \n    function swap(orig,dest){\n        if(!orig || (orig[0]===dest[0] && orig[1]===dest[1])){\n            \n        } else {\n            [grid[orig[0]][orig[1]],grid[dest[0]][dest[1]]] = [grid[dest[0]][dest[1]],grid[orig[0]][orig[1]]];\n            \n            check(grid);\n            setSwaps(swaps+1)\n        }\n        origin=null;\n    }\n    \n    function check(grid){        \n        // reset colors\n        for(let r=0;r<4;r++){\n            for(let c=0;c<4;c++){\n                styles[r][c][1]('')\n                highlights[r][c][1](false)\n            }\n        }\n        for(let color of colors) answerStatus[color][1](false);\n        \n        for(let color of colors){\n            // horizontal\n            for(let r=0;r<4;r++){\n                let count=0;\n                for(let c=0;c<4;c++){\n                    if(!(color in answers)) continue;\n                    if(answers[color].includes(grid[r][c])) count++;\n                }\n                if(count===4){\n                    for(let c=0;c<4;c++) styles[r][c][1](color);\n                    answerStatus[color][1](true);\n                }\n                if(count===3){\n                    for(let c=0;c<4;c++){\n                        if(answers[color].includes(grid[r][c])) highlights[r][c][1](true)\n                    }\n                }\n            }\n            \n            // vertical\n            for(let c=0;c<4;c++){\n                let count=0;\n                for(let r=0;r<4;r++){\n                    if(!(color in answers)) continue;\n                    if(answers[color].includes(grid[r][c])) count++;\n                }\n                if(count===4){\n                    for(let r=0;r<4;r++){ \n                        styles[r][c][1](color);\n                        answerStatus[color][1](true);\n                    }\n                }\n                if(count===3){\n                    for(let r=0;r<4;r++){\n                        if(answers[color].includes(grid[r][c])) highlights[r][c][1](true)\n                    }\n                }\n            }\n        }\n\n        // return {almost: almost, finished: finished}\n    }\n    \n    // check(grid);\n    return(\n        <>\n            <div id='board'>\n                {grid.map( (line,r) => {\n                    return <div id='row' key={r}>\n                        {line.map( (_,c) => {\n                            return <div className={`tile ${styles[r][c][0]} ${highlights[r][c][0] ? 'highlight' : ''}`} key={c} id={[r,c]}\n                            onPointerDown={selectOrigin} onPointerUp={selectDestination} onTouchMove={(e)=>e.preventDefault()}>\n                                {grid[r][c]}\n                            </div>\n                        })}\n                    </div>\n                })}\n            </div>\n            <div id='progress'>\n                <div id='groups-and-swaps'>\n                    <span>Game Groups: {Object.values(answerStatus).filter((ele)=>ele[0]===true).length}/{colors.length}</span>\n                    <span>Swaps: {swaps}</span>\n                </div>\n                <ol>\n                    {Object.values(answerStatus).map(function(bool,i){\n                        console.log(bool)\n                        if(!bool[0]) return <li key={i}>?????</li>\n                        else return <li className={colors[i]} key={i}>{Object.values(answers)[i][0]}</li>\n                    })}\n                </ol>\n            </div>\n        </>\n    )\n};\n\n\nexport default Board;","const allPuzzles = {\n    1: {\n        red: ['Mario Series', 'Super Mario Galaxy', 'Super Mario Odyssey', 'Super Mario World', 'Super Mario 64'],\n        blue: ['Zelda Series', 'The Legend of Zelda: Breath of the Wild', 'The Legend of Zelda: Tears of the Kingdom', 'The Legend of Zelda: A Link to the Past', 'The Legend of Zelda: A Link Between Worlds'],\n        pink: ['Arcade Games', 'Asteroids', 'Ms. Pac-Man', 'Street Fighter II: The World Warrior', 'Frogger'],\n        green: ['Blizzard Games', 'Diablo', 'Starcraft', 'Overwatch', 'World of Warcraft'],\n        purple: ['\"World\" Titles', 'World of Warcraft', 'Super Mario World', 'Street Fighter II: The World Warrior', 'The Legend of Zelda: A Link Between Worlds'],\n    },\n    2: {\n        red: ['Mario Series', 'Super Mario Galaxy', 'Super Mario Odyssey', 'Super Mario World', 'Super Mario 64'],\n        blue: ['Zelda Series', 'The Legend of Zelda: Breath of the Wild', 'The Legend of Zelda: Tears of the Kingdom', 'The Legend of Zelda: A Link to the Past', 'The Legend of Zelda: A Link Between Worlds'],\n        pink: ['Arcade Games', 'Asteroids', 'Ms. Pac-Man', 'Street Fighter II: The World Warrior', 'Frogger'],\n        green: ['Blizzard Games', 'Diablo', 'Starcraft', 'Overwatch', 'World of Warcraft'],\n        purple: ['\"World\" Titles', 'World of Warcraft', 'Super Mario World', 'Street Fighter II: The World Warrior', 'The Legend of Zelda: A Link Between Worlds'],\n    },\n    3: {\n        red: ['Mario Series', 'Super Mario Galaxy', 'Super Mario Odyssey', 'Super Mario World', 'Super Mario 64'],\n        blue: ['Zelda Series', 'The Legend of Zelda: Breath of the Wild', 'The Legend of Zelda: Tears of the Kingdom', 'The Legend of Zelda: A Link to the Past', 'The Legend of Zelda: A Link Between Worlds'],\n        pink: ['Arcade Games', 'Asteroids', 'Ms. Pac-Man', 'Street Fighter II: The World Warrior', 'Frogger'],\n        green: ['Blizzard Games', 'Diablo', 'Starcraft', 'Overwatch', 'World of Warcraft'],\n        purple: ['\"World\" Titles', 'World of Warcraft', 'Super Mario World', 'Street Fighter II: The World Warrior', 'The Legend of Zelda: A Link Between Worlds'],\n    },\n    4: {\n        red: ['Mario Series', 'Super Mario Galaxy', 'Super Mario Odyssey', 'Super Mario World', 'Super Mario 64'],\n        blue: ['Zelda Series', 'The Legend of Zelda: Breath of the Wild', 'The Legend of Zelda: Tears of the Kingdom', 'The Legend of Zelda: A Link to the Past', 'The Legend of Zelda: A Link Between Worlds'],\n        pink: ['Arcade Games', 'Asteroids', 'Ms. Pac-Man', 'Street Fighter II: The World Warrior', 'Frogger'],\n        green: ['Blizzard Games', 'Diablo', 'Starcraft', 'Overwatch', 'World of Warcraft'],\n        purple: ['\"World\" Titles', 'World of Warcraft', 'Super Mario World', 'Street Fighter II: The World Warrior', 'The Legend of Zelda: A Link Between Worlds'],\n    },\n    5: {\n        red: ['Mario Series', 'Super Mario Galaxy', 'Super Mario Odyssey', 'Super Mario World', 'Super Mario 64'],\n        blue: ['Zelda Series', 'The Legend of Zelda: Breath of the Wild', 'The Legend of Zelda: Tears of the Kingdom', 'The Legend of Zelda: A Link to the Past', 'The Legend of Zelda: A Link Between Worlds'],\n        pink: ['Arcade Games', 'Asteroids', 'Ms. Pac-Man', 'Street Fighter II: The World Warrior', 'Frogger'],\n        green: ['Blizzard Games', 'Diablo', 'Starcraft', 'Overwatch', 'World of Warcraft'],\n        purple: ['\"World\" Titles', 'World of Warcraft', 'Super Mario World', 'Street Fighter II: The World Warrior', 'The Legend of Zelda: A Link Between Worlds'],\n    },\n}\n\nexport default allPuzzles;","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Board from \"../Board/Board\";\r\nimport _ from 'lodash';\r\nimport allPuzzles from \"../../allPuzzles\";\r\n\r\n\r\nfunction parseGrid(puzzle){\r\n    let titles = new Set();\r\n    for(let group of Object.values(puzzle)){\r\n        for(let i=1;i<group.length;i++){\r\n            titles.add(group[i])\r\n        }\r\n    }\r\n    titles = Array.from(titles)\r\n    let testGrid = makeGrid(titles);\r\n    while(!check(testGrid,puzzle)) testGrid = makeGrid(titles);\r\n    return testGrid;\r\n}\r\n\r\nfunction makeGrid(titles){\r\n    titles = _.shuffle(titles);\r\n\r\n    const res = new Array(4).fill().map(()=>new Array(4));\r\n    for(let r=0;r<4;r++){\r\n        for(let c=0;c<4;c++){\r\n            res[r][c] = titles[r*4 + c]\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nfunction check(grid,puzzle){\r\n    for(let color of Object.keys(puzzle)){\r\n        // horizontal\r\n        for(let r=0;r<4;r++){\r\n            let count=0;\r\n            for(let c=0;c<4;c++){\r\n                if(puzzle[color].includes(grid[r][c])) count++;\r\n            }\r\n            if(count>2) return false;\r\n        }\r\n        \r\n        // vertical\r\n        for(let c=0;c<4;c++){\r\n            let count=0;\r\n            for(let r=0;r<4;r++){\r\n                if(puzzle[color].includes(grid[r][c])) count++;\r\n            }\r\n            if(count>2) return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction Page(){\r\n    const {puzzleId} = useParams();\r\n    const grid = puzzleId in allPuzzles ? parseGrid(allPuzzles[puzzleId]) : null;\r\n\r\n    return(\r\n        <>\r\n            <p>This is Puzzle Page #{puzzleId}</p>\r\n            {puzzleId in allPuzzles ? <Board grid={grid} answers={allPuzzles[puzzleId]}/> : `Sorry, that puzzle doesn't exist yet!`}\r\n        </>\r\n    ) \r\n}\r\n\r\nexport default Page","import './App.css';\nimport React from 'react';\nimport {Route, Routes} from 'react-router-dom'\nimport Home from './components/Home/Home';\nimport TopBar from './components/TopBar/TopBar';\nimport Page from './components/Page/Page';\n\nfunction App() {\n  return (\n    <div className='wrapper'>\n      <div className='side-panel'/>\n\n      <div className=\"App\">\n        <TopBar />\n        <Routes>\n          <Route path='/puzzles/:puzzleId' element={<Page/>} />\n          <Route exact path='/' element={<Home/>} />\n        </Routes>\n      </div>\n\n      <div className='side-panel'/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom/dist';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}