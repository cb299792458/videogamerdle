{"version":3,"sources":["components/Board/Board.js","components/Home/Home.js","components/TopBar/TopBar.js","App.js","reportWebVitals.js","index.js"],"names":["Board","props","console","log","_useState","useState","_useState2","_slicedToArray","swaps","setSwaps","puzzle","grid","answers","origin","colors","Array","fill","map","r","c","palette","selectOrigin","e","preventDefault","JSON","parse","target","id","selectDestination","destination","orig","dest","_ref","finished","_step","_iterator","_createForOfIteratorHelper","s","n","done","color","value","count","includes","err","f","window","alert","check","swap","React","createElement","Fragment","line","key","tile","className","style","backgroundColor","onPointerDown","onPointerUp","onTouchMove","Home","TopBar","FontAwesomeIcon","icon","_faBarsStaggered","_faCircleQuestion","_faHouse","_faChartSimple","example","purple","blue","red","orange","green","App","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","BrowserRouter"],"mappings":"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","file":"static/js/main.c69dfa02.chunk.js","sourcesContent":["import './Board.css'\nimport React from 'react'\nimport {useState} from 'react'\n\nfunction Board(props){\n    console.log('Rendering')\n    const [swaps, setSwaps] = useState(0)\n    const puzzle = props.puzzle;\n    const grid = puzzle.grid;\n    const answers = puzzle.answers\n\n    let origin = null;\n\n    const colors = new Array(4).fill().map(()=>new Array(4).fill(null));\n    for(let r=0;r<4;r++){\n        for(let c=0;c<4;c++){\n            colors[r][c] = useState('')\n        }\n    }\n    const palette = ['purple','blue','red','orange','green']\n\n    function selectOrigin(e){\n        e.preventDefault();\n        origin = JSON.parse('['+e.target.id+']')\n    }\n    \n    function selectDestination(e){\n        e.preventDefault();\n        const destination = JSON.parse('['+e.target.id+']')\n        swap(origin,destination);\n    }\n    \n    function swap(orig,dest){\n        if(!orig || (orig[0]===dest[0] && orig[1]===dest[1])){\n            origin=null;\n            return;\n        } else {\n            [grid[orig[0]][orig[1]],grid[dest[0]][dest[1]]] = [grid[dest[0]][dest[1]],grid[orig[0]][orig[1]]];\n\n            check();\n            setSwaps(swaps+1)\n            origin=null;\n        }\n    }\n\n    function check(){\n        let finished = 0;\n\n        // reset colors\n        for(let r=0;r<4;r++){\n            for(let c=0;c<4;c++){\n                colors[r][c][1]('')\n            }\n        }\n\n        for(let color of palette){\n            // horizontal\n            for(let r=0;r<4;r++){\n                let count=0;\n                for(let c=0;c<4;c++){\n                    if(answers[color].includes(grid[r][c])) count++;\n                }\n                if(count===4){\n                    // console.log('MATCH: ', answer[0])\n                    for(let c=0;c<4;c++) colors[r][c][1](color)\n                    finished++;\n                }\n            }\n\n            // vertical\n            for(let c=0;c<4;c++){\n                let count=0;\n                for(let r=0;r<4;r++){\n                    if(answers[color].includes(grid[r][c])) count++;\n                }\n                if(count===4){\n                    // console.log('MATCH: ', answer[0])\n                    for(let r=0;r<4;r++) colors[r][c][1](color)\n                    finished++;\n                }\n            }\n        }\n        if(finished===5) window.alert(\"You Win!\")\n    }\n\n    return(\n        <>\n            <div id='board'>\n                {grid.map( (line,r) => {\n                    return <div id='row' key={r}>\n                        {line.map( (tile,c) => {\n                            return <div className='tile' key={c} id={[r,c]} style={colors[r][c][0] ? {backgroundColor: colors[r][c][0], color: 'white'} : {}} \n                            onPointerDown={selectOrigin} onPointerUp={selectDestination} onTouchMove={(e)=>e.preventDefault()}>\n                                {grid[r][c]}\n                            </div>\n                        })}\n                    </div>\n                })}\n            </div>\n        </>\n    )\n};\n\n\nexport default Board;","import React from \"react\";\r\n\r\nfunction Home(){\r\n    return(\r\n        <>\r\n            <p>This is the Home Page</p>\r\n        </>\r\n    ) \r\n}\r\n\r\nexport default Home","import './TopBar.css';\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { icon } from '@fortawesome/fontawesome-svg-core/import.macro'\r\n\r\nfunction TopBar(){\r\n\r\n    return(\r\n        <div className=\"bar\">\r\n            <FontAwesomeIcon className={'icon'} icon={icon({name: 'bars-staggered'})} />\r\n            <FontAwesomeIcon className={'icon'} icon={icon({name: 'circle-question', style: 'regular'})} />\r\n\r\n            <div className='title'>\r\n                <p style={{color: '#6f7172'}}>GAME</p>\r\n                <p style={{color: '#6ebf8b'}}>GRID</p>\r\n            </div>\r\n\r\n            <FontAwesomeIcon className={'icon'} icon={icon({name: 'house'})} />\r\n            <FontAwesomeIcon className={'icon'} icon={icon({name: 'chart-simple'})} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBar;","import './App.css';\nimport React from 'react';\nimport {Route, Routes} from 'react-router-dom'\nimport Board from './components/Board/Board';\nimport Home from './components/Home/Home';\nimport TopBar from './components/TopBar/TopBar';\n\nconst example = {\n  grid: [\n      ['Overwatch','Street Fighter II: The World Warrior','Super Mario Odyssey','The Legend of Zelda: A Link to the Past'],\n      ['Asteroids','The Legend of Zelda: Breath of the Wild','Super Mario Galaxy','World of Warcraft'],\n      ['Super Mario World', 'Diablo', 'Frogger','The Legend of Zelda: Tears of the Kingdom'],\n      ['The Legend of Zelda: A Link Between Worlds','Ms. Pac-Man','Starcraft','Super Mario 64'],\n  ],\n  answers: {\n    purple: ['Mario Series', 'Super Mario Galaxy', 'Super Mario Odyssey', 'Super Mario World', 'Super Mario 64'],\n    blue: ['Zelda Series', 'The Legend of Zelda: Breath of the Wild', 'The Legend of Zelda: Tears of the Kingdom', 'The Legend of Zelda: A Link to the Past', 'The Legend of Zelda: A Link Between Worlds'],\n    red: ['Arcade Games', 'Asteroids', 'Ms. Pac-Man', 'Street Fighter II: The World Warrior', 'Frogger'],\n    orange: ['Blizzard Games', 'Diablo', 'Starcraft', 'Overwatch', 'World of Warcraft'],\n    green: ['\"World\" Titles', 'World of Warcraft', 'Super Mario World', 'Street Fighter II: The World Warrior', 'The Legend of Zelda: A Link Between Worlds'],\n  }\n}\n\nfunction App() {\n  return (\n    <div className='wrapper'>\n      <div className='side-panel'/>\n\n      <div className=\"App\">\n        <TopBar />\n        <Routes>\n          <Route exact path='/' element={<Home/>} />\n        </Routes>\n        <Board puzzle={example}/>\n      </div>\n\n      <div className='side-panel'/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom/dist';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}